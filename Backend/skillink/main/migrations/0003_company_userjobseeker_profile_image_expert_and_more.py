# Generated by Django 5.2.3 on 2025-06-11 16:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_userjobseeker_areas_of_interest'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('company_size', models.CharField(blank=True, choices=[('startup', 'Startup (1-10 employees)'), ('small', 'Small (11-50 employees)'), ('medium', 'Medium (51-200 employees)'), ('large', 'Large (201-1000 employees)'), ('enterprise', 'Enterprise (1000+ employees)')], max_length=50, null=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.AddField(
            model_name='userjobseeker',
            name='profile_image',
            field=models.ImageField(blank=True, null=True, upload_to='profile_images/'),
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('bio', models.TextField()),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='expert_profiles/')),
                ('current_position', models.CharField(max_length=200)),
                ('years_of_experience', models.IntegerField()),
                ('education', models.TextField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('consultation_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_available_for_consultation', models.BooleanField(default=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_consultations', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.company')),
                ('expertise_areas', models.ManyToManyField(related_name='experts', to='main.skill')),
            ],
            options={
                'verbose_name_plural': 'Experts',
            },
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('duration_months', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('is_remote', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('stipend_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('application_deadline', models.DateTimeField()),
                ('max_applicants', models.IntegerField(blank=True, null=True)),
                ('current_applicants', models.IntegerField(default=0)),
                ('internship_type', models.CharField(choices=[('summer', 'Summer Internship'), ('winter', 'Winter Internship'), ('part_time', 'Part-time Internship'), ('full_time', 'Full-time Internship'), ('research', 'Research Internship')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships', to='main.company')),
                ('required_skills', models.ManyToManyField(related_name='internships', to='main.skill')),
            ],
            options={
                'verbose_name_plural': 'Internships',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship')], max_length=50)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior (1-3 years)'), ('mid', 'Mid Level (3-5 years)'), ('senior', 'Senior (5+ years)'), ('lead', 'Lead/Manager')], max_length=50)),
                ('location', models.CharField(max_length=200)),
                ('is_remote', models.BooleanField(default=False)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('views_count', models.IntegerField(default=0)),
                ('applications_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_posts', to='main.company')),
                ('required_skills', models.ManyToManyField(related_name='job_posts', to='main.skill')),
            ],
            options={
                'verbose_name_plural': 'Job Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('bio', models.TextField()),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='mentor_profiles/')),
                ('current_position', models.CharField(max_length=200)),
                ('years_of_experience', models.IntegerField()),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('github_profile', models.URLField(blank=True, null=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_mentees', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.company')),
                ('specializations', models.ManyToManyField(related_name='mentors', to='main.skill')),
            ],
            options={
                'verbose_name_plural': 'Mentors',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_group_chat', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participants', models.ManyToManyField(related_name='chat_rooms', to='main.userjobseeker')),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_rooms', to='main.expert')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_rooms', to='main.mentor')),
            ],
            options={
                'verbose_name_plural': 'Chat Rooms',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('link', 'Link')], default='text', max_length=20)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='chat_attachments/')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main.userjobseeker')),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='main.chatroom')),
                ('expert_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main.expert')),
                ('mentor_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='main.mentor')),
            ],
            options={
                'verbose_name_plural': 'Chat Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, max_length=500, null=True)),
                ('event_type', models.CharField(choices=[('news', 'Company News'), ('event', 'Event'), ('webinar', 'Webinar'), ('workshop', 'Workshop'), ('conference', 'Conference'), ('hackathon', 'Hackathon'), ('job_fair', 'Job Fair')], max_length=50)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='news_events/')),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('event_location', models.CharField(blank=True, max_length=200, null=True)),
                ('is_virtual', models.BooleanField(default=False)),
                ('registration_url', models.URLField(blank=True, null=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('current_participants', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_events', to='main.company')),
                ('tags', models.ManyToManyField(blank=True, related_name='news_events', to='main.skill')),
            ],
            options={
                'verbose_name_plural': 'News & Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('provider_name', models.CharField(help_text='If not a company, enter organization name', max_length=200)),
                ('description', models.TextField()),
                ('eligibility_criteria', models.TextField()),
                ('required_documents', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('scholarship_type', models.CharField(choices=[('merit', 'Merit-based'), ('need', 'Need-based'), ('research', 'Research'), ('minority', 'Minority'), ('field_specific', 'Field-specific'), ('international', 'International Students')], max_length=50)),
                ('education_level', models.CharField(choices=[('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('postgraduate', 'Postgraduate'), ('phd', 'PhD'), ('any', 'Any Level')], max_length=50)),
                ('application_deadline', models.DateTimeField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('duration_years', models.IntegerField(blank=True, null=True)),
                ('is_renewable', models.BooleanField(default=False)),
                ('application_url', models.URLField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('max_recipients', models.IntegerField(blank=True, null=True)),
                ('current_applicants', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_of_study', models.ManyToManyField(blank=True, related_name='scholarships', to='main.skill')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scholarships', to='main.company')),
            ],
            options={
                'verbose_name_plural': 'Scholarships',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InternshipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('rejected', 'Rejected'), ('accepted', 'Accepted')], default='applied', max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internship_applications', to='main.userjobseeker')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='main.internship')),
            ],
            options={
                'verbose_name_plural': 'Internship Applications',
                'unique_together': {('internship', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('rejected', 'Rejected'), ('accepted', 'Accepted')], default='applied', max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='main.userjobseeker')),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='main.jobpost')),
            ],
            options={
                'verbose_name_plural': 'Job Applications',
                'unique_together': {('job_post', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='ScholarshipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_statement', models.TextField()),
                ('academic_transcripts', models.FileField(blank=True, null=True, upload_to='transcripts/')),
                ('recommendation_letters', models.FileField(blank=True, null=True, upload_to='recommendations/')),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='scholarship_docs/')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected'), ('awarded', 'Awarded')], default='applied', max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scholarship_applications', to='main.userjobseeker')),
                ('scholarship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='main.scholarship')),
            ],
            options={
                'verbose_name_plural': 'Scholarship Applications',
                'unique_together': {('scholarship', 'applicant')},
            },
        ),
    ]
